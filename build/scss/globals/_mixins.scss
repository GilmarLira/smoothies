
// Helper Mixins
// ////////////////////////////////////////////////////

@function lines($lines) { @return $lines * $body-font-size * $body-line-height; }

@mixin outline($color: #800080) { outline: 1px solid $color; }

@mixin top-bar($color: $color-text, $height: .5rem) {
  &::before {
    background: $color;
    content: ' ';
    display: block;
    height: $height;
  }
}

%top-border {
  border-top: .25rem solid $color-text;
  @include border-image(linear-gradient(left, #5a076a, #f13b04) 20 stretch);
}

@mixin top-border($color: $color-text) {
  @extend %top-border;
  border-color: $color;
}


%gradient { @include linear-gradient(#5a076a, #f13b04); }
// %gradient-favorite { @include linear-gradient(#f1aa11, #59f41c); }
%gradient-bar-selected {
  @include border-image(linear-gradient(left, #f5187f, #fd8606) 20 stretch);
  @include linear-gradient(#f5187f, #fd8606);
}

%clip {
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

%gradient-clip {
  @extend %gradient;
  @extend %clip;
}



// Buttons
// ////////////////////////////////////////////////////
@mixin button($color: $color-text, $radius: 3px) {
  cursor: pointer;
  display: inline-block;
  padding: .5em 1em;
  color: $color;
  background-color: rgba(#fff, .1);
  border-radius: $radius;
  box-shadow: 0 0 0 1px rgba(#000, .3);
  opacity: .5;
  @include typeface-montserrat;
  @include margins($before: 1, $after: 1);
  &:after { content: ''; }
  &:hover { opacity: 1; }
}



// Vertical Rhythm and Modular Scale with Baseline Grid by Justin Metros
// inspired by www.gridlover.net
// ////////////////////////////////////////////////////

// Sass Exponent Mixin
@function exponent($base, $exponent) {
  $value: $base;
  @if $exponent > 1 {
    @for $i from 2 through $exponent {
      $value: $value * $base;
    }
  }
  @if $exponent < 1 {
    @for $i from 0 through -$exponent {
      $value: $value / $base;
    }
  }
  @return $value;
}


// Rhythm Mixin. Adheres to Baseline Grid.
@mixin rhythm($scale, $before: 0, $after: 0) {
  @if $scale == 0 and $before == 0 and $after == 0 {
    font-size: $body-font-size;
    line-height: $body-font-size * $body-line-height;
  }@else {
    @if $scale == 0 {
      font-size: $body-font-size;
      line-height: $body-font-size * $body-line-height;
    }
    @else {
      $new-font-size: round($body-font-size * exponent($scale-factor, $scale));
      font-size: $new-font-size;
      line-height: ceil($new-font-size / ($body-line-height * $body-font-size)) * $body-line-height * $body-font-size;
    }
    margin-bottom: $body-font-size * $body-line-height * $after;
    margin-top: $body-font-size * $body-line-height * $before;
  }
}


// Rhythm Mixin. Margins Only.
@mixin margins($before: 0, $after: 0) {
  margin-bottom: $body-font-size * $body-line-height * $after;
  margin-top: $body-font-size * $body-line-height * $before;
}


// Rhythm Mixin. Padding Only.
@mixin paddings($before: 0, $after: 0) {
  padding-bottom: $body-font-size * $body-line-height * $after;
  padding-top: $body-font-size * $body-line-height * $before;
}
